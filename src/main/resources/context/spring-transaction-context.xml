<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--引入jdbc配置文件-->
    <context:property-placeholder location="jdbc.properties"/>
    <!--配置数据源-c3p0-->
    <bean class="com.mchange.v2.c3p0.ComboPooledDataSource" id="comboPooledDataSource">
        <property name="driverClass" value="${mysql.driver}"/>
        <property name="jdbcUrl" value="${test.url}"/>
        <property name="user" value="${mysql.username}"/>
        <property name="password" value="${mysql.password}"/>
    </bean>

    <!--配置dao-->
    <bean class="com.sqm.transaction.dao.impl.AccountDaoImpl" id="accountDao">
        <property name="dataSource" ref="comboPooledDataSource"/>
    </bean>
    <bean class="com.sqm.transaction.dao.impl.StockDaoImpl" id="stockDao">
        <property name="dataSource" ref="comboPooledDataSource"/>
    </bean>

    <!--配置service-->
    <bean class="com.sqm.transaction.service.impl.StockProcessServiceImpl" id="stockProcessService"
          p:accountDao-ref="accountDao" p:stockDao-ref="stockDao"/>

    <!--配置事务管理器-->
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
        <property name="dataSource" ref="comboPooledDataSource"/>
    </bean>

    <!--配置事务代理bean,由事务代理工厂创建-->
    <!--<bean class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"-->
          <!--id="stockProcessServiceProxy">-->
        <!--<property name="transactionManager" ref="transactionManager"/>-->
        <!--<property name="target" ref="stockProcessService"/>-->
        <!--<property name="transactionAttributes">-->
            <!--<props>-->
                <!--<prop key="open*">PROPAGATION_REQUIRED</prop>-->
                <!--<prop key="find*">PROPAGATION_SUPPORTS,readOnly</prop>-->
                <!--<prop key="buyStock">PROPAGATION_REQUIRED,-StockException</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

    <!--配置事务注解驱动-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--配置事务通知-->
    <tx:advice transaction-manager="transactionManager" id="transactionInterceptor">
        <tx:attributes>
            <tx:method name="open*" isolation="SERIALIZABLE"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="buyStock" rollback-for="StockException" isolation="SERIALIZABLE"/>
        </tx:attributes>
    </tx:advice>

    <!--配置事务顾问-->
    <aop:config>
        <aop:pointcut id="pointcut" expression="execution(* com.sqm.transaction.service.impl.*.*(..))"/>
        <aop:advisor advice-ref="transactionInterceptor" pointcut-ref="pointcut"/>
    </aop:config>

</beans>